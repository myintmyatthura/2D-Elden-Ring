package game;

import java.util.Arrays;
import java.util.List;

import edu.monash.fit2099.engine.displays.Display;
import edu.monash.fit2099.engine.positions.FancyGroundFactory;
import edu.monash.fit2099.engine.positions.GameMap;
import edu.monash.fit2099.engine.positions.Location;
import edu.monash.fit2099.engine.positions.World;
import game.CombatClass.*;
import game.Consumables.GoldenRunes;
import game.Consumables.Remembrance;
import game.Summonings.Ally;
import game.Summonings.Invader;
import game.TradingSystem.Enia;
import game.TradingSystem.Trader;
import game.enemies.GiantCrab;
import game.environments.*;
import game.grounds.*;
import game.reset.ResetManager;

/**
 * The main class to start the game.
 * Created by:
 * @author Adrian Kristanto
 * Modified by:
 *
 */
public class Application {

	public static void main(String[] args) {

		World world = new World(new Display());

		FancyGroundFactory groundFactory = new FancyGroundFactory(new Dirt(), new Wall(), new Floor(),
				new Graveyard(),new PuddleOfWater(),new GustOfWind(), new SiteOfLostGrace(),
				new Cliff(),new Barrack(), new Cage(), new SummonSign());

		List<String> map = Arrays.asList(
				"..nnnn................................................~~~~~~~~~~~~~~~~~~~~~",
				"......................#####....######..................~~~~~~~~~~~~~~~~~~~~",
				"..nnnn................#..___....____#...................~~~~~~~~~~~~~~~~~~~",
				"..................................__#....................~~~~~~~~~~~~~~~~~~",
				"......................._____........#.....................~~~~~~~~~~~~~~~~~",
				"......................#............_#......................~~~~~~~~~~~~~~~~",
				"............=.........#...........###......................................",
				"...........................................................................",
				"...........................................................................",
				"~~~~~~~~~~~.......................###___###................................",
				"~~~~~~~~~~~~......................________#....nnnn........................",
				"~~~~~~~~~~~~~.....................#___U____................................",
				"~~~~~~~~~~~~......................#_______#....nnnn........................",
				"~~~~~~~~~~~.......................###___###................................",
				"~~~~~~~~~~..........................#___#..................................",
				"...........................................................................",
				"...........................................................................",
				"...........................................................................",
				"..####__##...........................................&&&......######..##...",
				"..#.....__...........................................&&&......#....____....",
				"..#___..............&&&..............................&&&........__.....#...",
				"..####__###.........&&&......................................._.....__.#...",
				"....................&&&.......................................###..__###...",
				"...........................................................................");

		List<String> limgrave = Arrays.asList(
				"....nnnn..............#.............#..........................+++.........",
				"......................#.............#.......................+++++..........",
				"....nnnn..............#..___....____#.........................+++++........",
				"......................#...........__#............................++........",
				"......................#_____........#.............................+++......",
				"~~~~~~................#............_#..............................+++.....",
				"~~~~..................######...######......................~~~~~...........",
				"~~~~~.......................................................~~.............",
				"...~~~~~....................=.................................~~~..........",
				"........++++......................###___###....................~...........",
				"........+++++++...................________#................................",
				"..........+++.....................#___U____................................",
				"............+++...................#_______#.................nn...nn........",
				".............+....................###___###....................n...........",
				"............++........&&............#___#..................................",
				"..............+.......&...........=........................................",
				"..............++......&..........................................=.........",
				"..............................................++...........................",
				"..................++++......................+++..&&...........######..##...",
				"#####___######....++...........................+++.&&.........#....____....",
				"_____________#.....++++..........................+&&............__.....#...",
				"_____________#.....+....++........................++.........._.....__.#...",
				"_____________#.........+..+.....................+++...........###..__###...",
				"_____________#.............++..............................................");

		List<String> stormveilCastle = Arrays.asList(
				"...........................................................................",
				"..................<...............<........................................",
				"...........................................................................",
				"##############################################...##########################",
				"............................#................#.......B..............B......",
				".....B...............B......#................#.............................",
				"...............................<.........<.................................",
				".....B...............B......#................#.......B..............B......",
				"............................#................#.............................",
				"#####################..#############...############.####..#########...#####",
				"...............#++++++++++++#................#++++++++++++#................",
				"...............#+++++<.+++++...<.........<...#++++++++++++#................",
				"...............#++++++++++++..................++++++++++++#................",
				"...............#++++++++++++#................#++++++++++++#................",
				"#####...##########.....#############...#############..#############...#####",
				".._______........................B......B........................B.....B...",
				"_____..._..____....&&........<..............<..............................",
				".........____......&&......................................................",
				"...._______..................<..............<....................<.....<...",
				"#####....##...###..#####...##########___###############......##.....####...",
				"+++++++++++++++++++++++++++#...................#+++++++++++++++++++++++++++",
				"+++++++++++++++++++++++++++....................#+++++++++++++++++++++++++++",
				"+++++++++++++++++++++++++++#....................+++++++++++++++++++++++++++",
				"+++++++++++++++++++++++++++#...................#+++++++++++++++++++++++++++");

		List<String> roundTableHold = Arrays.asList(
				"##################",
				"#________________#",
				"#________________#",
				"#________________#",
				"#________________#",
				"#________________#",
				"#________________#",
				"#________________#",
				"#________________#",
				"#________________#",
				"########___#######");

		List<String> bossRoom = Arrays.asList(
				"+++++++++++++++++++++++++",
				".........................",
				"..=......................",
				".........................",
				".........................",
				".........................",
				".........................",
				".........................",
				"+++++++++++++++++++++++++");


//		List<String> map = Arrays.asList(
//				"...........................................................................",
//				"......................#####....######......................................",
//				"......................#..___....____#......................................",
//				"..................................__#......................................",
//				"......................._____........#......................................",
//				"......................#............_#......................................",
//				"......................#...........###............U.........................",
//				"..................................................................&..&.....",
//				"...........................................................................",
//				"....................+.............###___###................................",
//				"..................................________#................................",
//				"..................................#___U____....................~..~........",
//				"..................................#__.____#................................",
//				"..................................###.__###................................",
//				"....................................#___#..................................",
//				"...........................................................................",
//				"...........................................................................",
//				"...........................................................................",
//				"..####__##....................................................######..##...",
//				"..#.&.<___....................................................#....____....",
//				"..#____.<_......................................................__.....#...",
//				"..####__###..................................................._.....__.#...",
//				"..............................................................###..__###...",
//				"...........................................................................");
		GameMap limgraveMap = new GameMap(groundFactory, limgrave); // use map first
		GameMap roundTableHoldMap = new GameMap(groundFactory, roundTableHold);
		GameMap stormveilCastleMap = new GameMap(groundFactory, stormveilCastle);
		GameMap boosRoomMap = new GameMap(groundFactory, bossRoom);
		limgraveMap.at(9,7).setGround(new GoldenFogDoor(roundTableHoldMap.at(9,9),"to RoundTable Hold"));
		limgraveMap.at(13,7).setGround(new GoldenFogDoor(stormveilCastleMap.at(7,12),"to Stormveil Castle"));
		roundTableHoldMap.at(9,9).setGround(new GoldenFogDoor(limgraveMap.at(9,7), "to Limgrave"));
		stormveilCastleMap.at(7,12).setGround(new GoldenFogDoor(limgraveMap.at(13,7),"to Limgrave"));
		stormveilCastleMap.at(12,12).setGround(new GoldenFogDoor(boosRoomMap.at(15,6),"to Boss Room"));

		// add maps to world
		world.addGameMap(limgraveMap);
		world.addGameMap(roundTableHoldMap);
		world.addGameMap(stormveilCastleMap);
		world.addGameMap(boosRoomMap);


		// BEHOLD, ELDEN RING
		for (String line : FancyMessage.ELDEN_RING.split("\n")) {
			new Display().println(line);
			try {
				Thread.sleep(200);
			} catch (Exception exception) {
				exception.printStackTrace();
			}
		}
		limgraveMap.at(40,5).addItem(new GoldenRunes("Golden Runes",'*',true));
		limgraveMap.at(14,10).addItem(new Remembrance());
		limgraveMap.at(25,4).addActor(new Enia());
		limgraveMap.at(37,8).addActor(new Trader()); // 30,9 /25,2
//		limgraveMap.at(35,12).addActor(new Ally());
		//limgraveMap.at(35,11).addActor(new Invader());

		ResetManager resetManager = ResetManager.getInstance();
		resetManager.addMap(limgraveMap);
		// HINT: what does it mean to prefer composition to inheritance?
		Player player = Player.getInstance();
		ClassManager classmanage = ClassManager.getInstance();
		classmanage.registerClasses(new Samurai());
		classmanage.registerClasses(new Bandit());
		classmanage.registerClasses(new Archeologist());
		classmanage.registerClasses(new Wretch());

		player.addGameMap(limgraveMap);
		Location loc = new Location(limgraveMap,35,10);
		resetManager.addLoc(loc);
		world.addPlayer(player, limgraveMap.at(40, 8)); // 12/38,9
		player.setStartingLocation(38,9);
		world.run();
	}

}
